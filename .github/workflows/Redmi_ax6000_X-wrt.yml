#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: 红米AX6000_X-wrt

on:
  repository_dispatch:
  workflow_dispatch: 
#  schedule:
#    - cron: 0 18 * * * 
# 分 时 日 月 星期
# 国际时间18:00，北京时间凌晨2:00左右执行任务(+8小时)

env:
  REPO_URL: https://github.com/x-wrt/x-wrt.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: redmi-ax6000-X-wrt.config
  DIY_P1_SH: redmi-ax6000-1.sh
  DIY_P2_SH: redmi-ax6000-2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential ecj fastjar file flex g++ gcc-multilib g++-multilib gawk gettext git git-core java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev swig python3 python3-dev python3-distutils python3-pyelftools subversion unzip wget zlib1g-dev rsync qemu-utils
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: 下载源码
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载脚本
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: SSH to Actions
      uses: rdp-studio/ssh2actions@v2.0.0
            

    # - name: 加载配置
    #   run: |
    #     [ -e files ] && mv files openwrt/files
    #     [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
    #     chmod +x $DIY_P2_SH
    #     cd openwrt
    #     $GITHUB_WORKSPACE/$DIY_P2_SH
                    
    # - name: 下载dl库
    #   id: package
    #   run: |
    #     cd openwrt
    #     make download -j8
    #     find dl -size -1024c -exec ls -l {} \;
    #     find dl -size -1024c -exec rm -f {} \;


    # - name: 编译固件
    #   id: compile
    #   run: |
    #     cd openwrt
    #     echo -e "$(nproc) thread compile"
    #     make -j$(nproc) || make -j1 V=s
    #     echo "status=success" >> $GITHUB_OUTPUT
    #     grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
    #     [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
    #     echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

   

    # - name: 上传bin目录
    #   uses: actions/upload-artifact@main
    #   if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
    #   with:
    #     name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
    #     path: ./openwrt/bin

    # - name: 整理文件
    #   id: organize
    #   if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
    #   run: |
    #     cd openwrt/bin/targets/*/*
    #     rm -rf packages
    #     echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    #     echo "status=success" >> $GITHUB_OUTPUT

    # - name: 上传固件目录
    #   uses: actions/upload-artifact@main
    #   if: steps.organize.outputs.status == 'success' && !cancelled()
    #   with:
    #     name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
    #     path: ${{ env.FIRMWARE }}


    # - name: 整理文件
    #   run: |
    #       cd openwrt
    #       mkdir -p ./artifact/package
    #       mkdir -p ./artifact/buildinfo
    #       rm -rf $(find ./bin/targets/ -type d -name "packages")
    #       cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
    #       cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    # - name: Upload buildinfo
    #   uses: actions/upload-artifact@main
    #   with:
    #     name: OpenWrt_buildinfo   
    #     path: ./openwrt/artifact/buildinfo/

    # - name: Upload package
    #   uses: actions/upload-artifact@main
    #   with:
    #     name: OpenWrt_package 
    #     path: ./openwrt/artifact/package/

    - name: 上传配置文件
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_Profiles
        path: ./openwrt/.config
    

   # - name: Upload firmware
   #   uses: actions/upload-artifact@main
   #   with:
   #      name: OpenWrt_firmware
   #     path: ./openwrt/bin/targets/
          
